buildscript {
    repositories {
        jcenter()
    }
    dependencies {
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'pmd'
apply plugin: 'jacoco'

apply plugin: 'eclipse'
apply plugin: 'idea'

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://maven.seasar.org/maven2/'
    }
}

def LOGBACK_VERSION = '1.1.2'
def S2CONTAINER_VER = '2.4.48'

dependencies {
    compile files('lib/TWL.jar')
    compile files('lib/TWLEffects.jar')

    compile group: 'org.slick2d', name: 'slick2d-core', version: '1.0.1'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    compile group: 'xpp3', name: 'xpp3', version: '1.1.4c'
    compile 'io.netty:netty-all:5.0.0.Alpha2'
    compile 'net.arnx:jsonic:1.3.7'

    // Settings Logging
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.10'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: LOGBACK_VERSION
    compile group: 'ch.qos.logback', name: 'logback-core', version: LOGBACK_VERSION

    // Settings DI Container
    compile group: 'org.seasar.container', name: 's2-framework', version: S2CONTAINER_VER
    compile group: 'org.seasar.container', name: 's2-extension', version: S2CONTAINER_VER
    compile group: 'org.seasar.container', name: 's2-tiger', version: S2CONTAINER_VER
    compile group: 'org.apache.geronimo.specs', name: 'geronimo-ejb_3.0_spec', version: '1.0.1'
    compile group: 'org.apache.geronimo.specs', name: 'geronimo-jta_1.1_spec', version: '1.1.1'

    // Settings DB
    compile group: 'org.dbflute', name: 'dbflute-runtime', version: '1.1.0-sp2'
    compile group: 'com.h2database', name: 'h2', version: '1.4.186'

    testCompile group: 'junit', name: 'junit', version: '4.+'
}

mainClassName = 'com.github.hatimiti.gamix.app.Main'
applicationDefaultJvmArgs = ["-Djava.library.path=./src/main/resources/lwjgl/native/macosx"]

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

pmd {
	ignoreFailures = true
	sourceSets = [sourceSets.main]
	reportsDir = file("$project.buildDir/reports/pmd")
	ruleSets = [
		'java-basic',
		'java-strings',
		'java-braces'
	]
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

task cpdCheck(dependsOn: check) doLast {
	File outDir = new File('build/reports/pmd/')
	outDir.mkdirs()
	ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask',
		classpath: configurations.pmd.asPath)
	ant.cpd(minimumTokenCount: '50', format: 'xml',
		outputFile: new File(outDir, 'cpd.xml'))
	{
		fileset(dir: 'src/main/java') {
			include(name: '**/*.java')
			exclude(name: '**/*Sample.java')
		}
	}
}
